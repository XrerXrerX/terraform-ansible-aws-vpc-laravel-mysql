# @format
---
- name: Copy .env.example to .env if not exists
  command: cp .env.example .env
  args:
    chdir: "{{ laravel_app_path }}"
    creates: "{{ laravel_app_path }}/.env"

- name: Ganti DB_CONNECTION dari sqlite ke mysql
  lineinfile:
    path: "{{ laravel_app_path }}/.env"
    regexp: "^DB_CONNECTION="
    line: "DB_CONNECTION={{ laravel_db_connection }}"
    backrefs: yes

- name: Set DB_HOST in .env (auto-uncomment)
  lineinfile:
    path: "{{ laravel_app_path }}/.env"
    regexp: '^#?\s*DB_HOST='
    line: "DB_HOST={{ laravel_db_host }}"

- name: Set DB port in .env
  lineinfile:
    path: "{{ laravel_app_path }}/.env"
    regexp: '^#?\s*DB_PORT='
    line: "DB_PORT={{ laravel_db_port }}"

- name: Set DB name in .env
  lineinfile:
    path: "{{ laravel_app_path }}/.env"
    regexp: '^#?\s*DB_DATABASE='
    line: "DB_DATABASE={{ laravel_db_name }}"

- name: Set DB user in .env
  lineinfile:
    path: "{{ laravel_app_path }}/.env"
    regexp: '^#?\s*DB_USERNAME='
    line: "DB_USERNAME={{ laravel_db_user }}"

- name: Set DB password in .env with double quotes
  lineinfile:
    path: "{{ laravel_app_path }}/.env"
    regexp: '^#?\s*DB_PASSWORD='
    line: 'DB_PASSWORD="{{ laravel_db_password }}"'

- name: Set APP_DEBUG to false for production
  lineinfile:
    path: "{{ laravel_app_path }}/.env"
    regexp: '^#?\s*APP_DEBUG='
    line: "APP_DEBUG=false"
  when: env == 'prod'

- name: Set APP_DEBUG to true for development
  lineinfile:
    path: "{{ laravel_app_path }}/.env"
    regexp: '^#?\s*APP_DEBUG='
    line: "APP_DEBUG=true"
  when: env == 'dev'

- name: Set APP_ENV to production
  lineinfile:
    path: "{{ laravel_app_path }}/.env"
    regexp: '^#?\s*APP_ENV='
    line: "APP_ENV=production"
  when: env == 'prod'

- name: Set APP_ENV to local for development
  lineinfile:
    path: "{{ laravel_app_path }}/.env"
    regexp: '^#?\s*APP_ENV='
    line: "APP_ENV=local"
  when: env == 'dev'
